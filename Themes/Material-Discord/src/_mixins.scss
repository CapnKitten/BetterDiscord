@function important($important) {
	@return #{if($important, '!important', '')};
}

@mixin popout-format($important: false) {
	background-color: var(--popout-color) important($important);
	border-radius: var(--popout-radius-big) important($important);
	border: none important($important);
	box-shadow: var(--shadow-medium) important($important);
}

@mixin card-format($important: false, $padding: 0, $filled: false, $hover: false, $shadow: false) {
	@if $filled {
		background-color: var(--card-color-filled) important($important);
		border: none important($important);
	} @else {
		background-color: var(--card-color-outlined) important($important);
		border: 1px solid var(--card-border-color) important($important);
	}

	padding: $padding;
	border-radius: var(--card-radius-big) important($important);

	@if $hover {
		@if $shadow {
			box-shadow: none important($important);
			transition: var(--default-time) var(--default-animation) background-color, var(--default-time) var(--default-animation) box-shadow important($important);

			&:hover {
				background-color: var(--card-color-hover) important($important);
				box-shadow: var(--shadow-soft) important($important);
			}
		} @else {
			transition: var(--default-time) var(--default-animation) background-color important($important);

			&:hover {
				background-color: var(--card-color-hover) important($important);
			}
		}
	} @else {
		box-shadow: none important($important);
	}
}

@mixin card-format--header($important: false, $filled: false) {
	margin-bottom: 0;
	padding: 16px important($important);
	background-color: transparent important($important);
	font-size: 1.25em important($important);
	line-height: normal;
	color: var(--card-header-text-color) important($important);
	font-weight: 400 important($important);
	opacity: 1;

	@if $filled == false {
		border-bottom: 1px solid var(--card-border-color);
	}
}

@mixin card-format--header-fix {
	line-height: normal;
	font-size: inherit;
	color: var(--card-header-text-color);
	font-weight: 400;
}

@mixin card-format--body($filled: false) {
	@if $filled {
		padding: 0 16px 16px;
	} @else {
		padding: 16px;
	}
}

@mixin card-format--footer($padding: 8px) {
	padding: $padding;
	background-color: transparent;
	border-top: 1px solid var(--card-border-color);
}

@mixin card-format--list($margin: 16px) {
	position: relative;
	border-bottom: none;

	&:after {
		position: absolute;
		content: " ";
		width: calc(100% - (#{$margin} * 2));
		height: 1px;
		right: 0;
		bottom: 0;
		margin: 0 $margin;
		background-color: var(--card-border-color);
	}

	&:last-of-type {
		&:after {
			display: none;
		}
	}
}

@mixin card-option-select($radius-unselected: 34px, $filled: true, $selector: null, $text: null) {
    background-color: var(--card-color-filled);
    border-radius: $radius-unselected;
    border: none;
    transition: var(--default-time) var(--default-animation) background-color, var(--default-time) var(--default-animation) box-shadow, var(--default-time) var(--default-animation) border-radius;

    @if $selector {
        &#{$selector} {
            background-color: hsl(var(--accent-hsl--material-you));
            border-radius: var(--card-radius-big);
            border: none;

			@if $filled {
				box-shadow: none;
			} @else {
				box-shadow: 0 0 0 2px hsl(var(--accent-hsl--material-you)), inset 0 0 0 2px var(--popout-color);
			}

			@if $text {
				#{$text} {
					color: var(--accent-text-color--material-you) !important;
				}

				svg {
					color: var(--accent-text-color--material-you);
				}
			}
        }
    }

	@if $text {
		#{$text},
		svg {
			transition: var(--default-time) var(--default-animation) color;
		}
	}
}

@mixin pill-nav($important: false, $height, $pill-item, $selector, $hover: false) {
    --nav-button-height: #{$height};
    --nav-button-big-radius: calc(var(--nav-button-height) / 2);
    --nav-button-small-radius: calc(var(--nav-button-height) / 5);

    padding: 0;
    background-color: transparent;
    border-radius: 0;
    gap: 2px;

    #{$pill-item} {
		display: flex;
		min-width: calc(var(--button-height) + var(--space-8));
		height: var(--nav-button-height);
		padding-top: 0;
		padding-bottom: 0;
        background-color: var(--accent-secondary-color) important($important);
        border-radius: var(--nav-button-small-radius);
        color: var(--accent-secondary-text-color);
		justify-content: center;
        transition: var(--default-time) var(--default-animation) background-color, var(--default-time) var(--default-animation) color, var(--default-time) var(--default-animation) border-radius;

        &:first-of-type {
            border-radius: var(--nav-button-big-radius) var(--nav-button-small-radius) var(--nav-button-small-radius) var(--nav-button-big-radius);
        }

        &:last-of-type {
            border-radius: var(--nav-button-small-radius) var(--nav-button-big-radius) var(--nav-button-big-radius) var(--nav-button-small-radius);
        }

		@if $hover {
			&:hover {
	            background-color: var(--card-button-color-hover) important($important);
	        }
		}

        &#{$selector} {
            background-color: hsl(var(--accent-hsl--material-you)) important($important);
            border-radius: var(--nav-button-big-radius);
			border: none;
            color: var(--accent-text-color--material-you);
        }
    }
}

@mixin input-format($important: false, $focus-within: false, $rounded: false, $height: var(--input-height), $max-height: var(--input-height)) {
	@if $rounded {
		height: $height important($important);
		max-height: $max-height important($important);
		padding: 0 var(--input-padding) important($important);
		background-color: var(--input-color) important($important);
		border-radius: calc(#{$height} / 2) important($important);
		border: none;
		box-shadow: none;

		&:focus-within {
			box-shadow: none;
		}
	} @else {
		min-height: $height important($important);
		height: $height important($important);
		padding: 0 var(--input-padding) important($important);
		background-color: var(--input-color) important($important);
		border-radius: 4px 4px 0 0 important($important);
	    border: none;
	    box-shadow: inset 0 -1px 0 0 var(--input-border-color);
	    color: var(--input-text-color);
	    transition: var(--default-time) var(--default-animation) box-shadow;
		box-sizing: border-box;

	    &:hover {
	        border: none;
	    }

		@if $focus-within {
			&:focus-within {
				box-shadow: inset 0 -2px 0 0 hsl(var(--accent-hsl--material-you));
			}
		} @else {
			&:focus {
				box-shadow: inset 0 -2px 0 0 hsl(var(--accent-hsl--material-you));
		    }
		}
	}
}

@mixin input-transform($important: false, $height: var(--input-height)) {
	border-radius: calc(#{$height} / 2) important($important);
	border: none important($important);
	box-shadow: none important($important);

	&:focus-within {
		box-shadow: none important($important);
	}
}

@mixin tab-border($width) {
	position: relative;
	background-color: transparent !important;
	border: none;

	&:after {
		position: absolute;
		content: " ";
		width: #{$width};
		height: 3px;
		left: 0;
		right: 0;
		bottom: 0;
		margin: 0 auto;
		background: var(--tab-border-color);
		border-radius: 3px;
		transition: var(--default-time) ease all;
	}
}

@mixin md-ripple($type, $pseudo, $scale, $colored: false) {
	@if $colored == true {
		--md-ripple-color: var(--accent-hsl);
	}

	position: relative;

	&:#{$pseudo} {
		content: " ";
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		background-color: hsl(var(--md-ripple-color),0.1);
		border-radius: 50%;
		opacity: 0;
		pointer-events: none;
		transform: scale(1.2);
		transition: 300ms ease;
		z-index: 4;
	}

	@if $type == hover {
		&:hover {
			&:#{$pseudo} {
				opacity: 1;
				transform: scale(#{$scale});
				animation: scale 150ms var(--default-animation), opacity 150ms ease;
			}
		}

		&:active {
			&:#{$pseudo} {
				background-color: hsl(var(--md-ripple-color),0.2);
			}
		}
	} @else if $type == click {
		&:active {
			&:#{$pseudo} {
				opacity: 1;
				transform: scale(#{$scale});
				animation: scale 150ms var(--default-animation), opacity 150ms ease;
			}
		}
	} @else if $type == hover_click {
		&:hover,
		&:active {
			&:#{$pseudo} {
				opacity: 1;
				transform: scale(#{$scale});
				animation: scale 150ms var(--default-animation), opacity 150ms ease;
			}
		}

		&:active {
			&:#{$pseudo} {
				background-color: hsl(var(--md-ripple-color),0.2);
			}
		}
	}
}

@mixin add-icon($color, $icon, $type: 'outline') {
	-webkit-mask-image: url(https://capnkitten.github.io/BetterDiscord/Themes/Material-Discord/files/icons/#{$type}/#{$icon}.svg);
	-webkit-mask-repeat: no-repeat;

	@if $color != null {
		background-color: #{$color};
	}
}

@mixin remove-caps($font-size, $important: false) {
	font-size: #{$font-size} important($important);
	text-transform: none important($important);
}
